plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id "androidx.navigation.safeargs"
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "info.rashadtanjim.interactivephotogallery"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "0.1.0"

        def buildDateStamp = new Date().format("MMMM dd, yyyy")
        buildConfigField "String", "LAST_BUILD_DATE", "\"$buildDateStamp\""

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('../rashadtanjim_gallery.jks')
            storePassword 'rashadtanjim_gallery'
            keyAlias 'rashadtanjim_gallery'
            keyPassword 'rashadtanjim_gallery'
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    androidExtensions {
        features = ["parcelize"]
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'

    // UI related
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:1.3.0-alpha01"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // Jetpack Architectural Component
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Navigation and it's component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Kotlin Coroutines for asynchronous task handling
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit for network calling
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Hilt-Draggier for Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Local datastore and room
    implementation "androidx.datastore:datastore-preferences:$preferences_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.1"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links:21.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.4'
    implementation 'com.google.firebase:firebase-analytics:20.0.0'
    implementation 'com.google.firebase:firebase-firestore:24.0.0'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'

    // Photo Loader
    implementation 'com.jsibbold:zoomage:1.3.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt "com.github.bumptech.glide:compiler:4.12.0"
    implementation "com.airbnb.android:lottie:$lottie_version"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "io.mockk:mockk:1.10.6"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "io.mockk:mockk-android:1.10.6"
}